/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Dionaea.Design;
import Dionaea.Data.Honeypot;
import Dionaea.Data.SslConnection;
import Dionaea.Database.DbHoneypot;
import Dionaea.Database.DbMain;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author lap
 */

public final class Main extends javax.swing.JFrame {

    ArrayList<Honeypot> list;
    Honeypot hnew;
    DbMain db;
    
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        //this.addNewHoneypot.setVisible(false);
        db = new DbMain();
        getHoneypots();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dionaea");

        jMenu1.setText("File");

        jMenuItem1.setText("add honeypot");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 918, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 628, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void addDionea()
    {/*
            Honeypot hnew = new Honeypot();
            hnew.setIp(this.addIp.getText().toString());
            hnew.setUsername(this.AddUsername.getText().toString());
            hnew.setName(this.addName.getText().toString());
            hnew.setPassword(new String(this.addPass.getPassword()));
            hnew.setPort(Integer.parseInt(this.AddPort.getText().toString()));
            hnew.setType("dionaea");
        try {            
            int id = db.addHoneypot(hnew);
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
            DbHoneypot dbhoneypot = new DbHoneypot("logsql.sqlite");
            
           // process(dbhoneypot,id);
            getHoneypots();*/
    }
    
    private void process(DbHoneypot dh , int a )
    {
        db.max();
        try {
            db.addConn(dh.resultOfConn(),a);
            db.addEmuProfile(dh.emuProfile());
            db.addEmuServices(dh.emu_serivces());
            db.addLogins(dh.logins());
            db.addMssql_commands(dh.mssql_command());
            db.addMssql_fingerprints(dh.mssql_fingerprint());
            db.addDcerpcbinds(dh.resultOfConnDcerpcbinds());
            db.addDcerpcrequests(dh.dcerpcrequests());
            db.addDownloads(dh.downloads());
            db.addMysqlCommands(dh.mysqlCommands());
            db.addMysqlCommandArgs(dh.mysqlCommandsArgs());
            db.addP0fs(dh.p0fs());
            db.addSipCommands(dh.sip_commands());
            db.addSipAddrs(dh.sip_addrs());
            db.addSipSdpConnectiondatas(dh.sip_sdp_connectiondatas());
            db.addSipSdpMedia(dh.sip_sdp_medias());
            db.addSipSdpOrigins(dh.sip_sdp_origins());
            db.addSipVias(dh.sip_vias());
            db.max();
            
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        AddHoneypot dialog = new AddHoneypot(this,true);
        hnew = dialog.result(list);
        getHoneypots();
        int id=-1;
        try {
             id = db.addHoneypot(hnew);
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(hnew.getType().equalsIgnoreCase("Dioneae"))
        {
             DbHoneypot dbhoneypot = new DbHoneypot(hnew.getName().toString());
            
             process(dbhoneypot,id);
            
        }
        else
            try {
            db.addHoneyd(hnew.getName().toString(), id);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    public void getHoneypots()
    {
        String [] header={"name","IP","Username","type"};
        
        list = new ArrayList<Honeypot>();
        list = db.getListOfHoneypot();
        String [][] rowAndColumn = new String [list.size()][4];
        for (int i =0 ;i<list.size();i++)
        {
            rowAndColumn[i][0] = list.get(i).getName();
            rowAndColumn[i][1] = list.get(i).getIp();
            rowAndColumn[i][2] = list.get(i).getUsername();
            rowAndColumn[i][3] = list.get(i).getType();
        }
        DefaultTableModel model = new DefaultTableModel();

       // JTable table = new JTable(rowAndColumn,header);
        // this.jTable1.setModel(model);
         model.setDataVector(rowAndColumn, header);
       //  model.addRow(rowAndColumn[2]);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
}
